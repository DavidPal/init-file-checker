[tool.poetry]
name = "init-file-checker"
version = "0.0.2"
description = "Checker of __init__.py files in Python projects"
license = "MIT"
authors = ["David Pal <davidko.pal@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/DavidPal/init-file-checker"
repository = "https://github.com/DavidPal/init-file-checker"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]

[tool.poetry.scripts]
init-file-checker = "init_file_checker:main"

[tool.poetry.dependencies]
python = "^3.8.5"

[tool.poetry.dev-dependencies]
coverage = "^7.4.0"
flake8 = "^7.0.0"
flake8-absolute-import = "^1.0.0.1"
flake8-quotes = "^3.3.2"
mypy = "^1.13.0"
pydocstyle = {extras = ["toml"], version = "^6.3.0"}
pytest = "^8.3.5"
pylint = "~3.0.3"
ruff = "^0.14.2"
whitespace-format = "^0.0.10"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
skip-string-normalization = true

[tool.isort]
profile = "black"
force_single_line = true
line_length = 100
multi_line_output = 3

[tool.pydocstyle]
# List of rules (error codes) that should be enforced by pydocstyle.
# Complete list of codes can be found at: http://www.pydocstyle.org/en/stable/error_codes.html
# Keep the list below in lexicograhic order!
select = "D101,D102,D103,D105,D200,D201,D204,D205,D206,D207,D208,D209,D210,D211,D212,D300,D400,D403,D405,D411,D416,D419"

[tool.ruff]
line-length = 100
indent-width = 4

[tool.ruff.format]
line-ending = "lf"
indent-style = "space"
quote-style = "double"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "C901",
    "D301",
    "E501",
    "EM101",
    "EM102",
    "EXE002",
    "FA100",
    "FBT001",
    "FBT003",
    "PLR0912",
    "PLR0915",
    "PLR2004",
    "PLR5501",
    "PT009",
    "PTH123",
    "Q003",
    "T201",
    "TRY003",
    "UP006",
    "UP015",
    "UP024",
    "UP035",
    "UP045",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
force-single-line = true
force-sort-within-sections = false
from-first = false
order-by-type = true

[tool.ruff.lint.pylint]
max-returns = 30

[tool.ruff.lint.pydocstyle]
convention = "google"
